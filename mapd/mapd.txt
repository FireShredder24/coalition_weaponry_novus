Part : /BASE_PART
{
	NameKey = "Parts/MAPD"
	IconNameKey = "Parts/MAPDIcon"
	ID = fireshredder24.mapd
	EditorGroup = "Weapons"
	DescriptionKey = "Parts/MAPDDesc"
	Cost = 6500
	AIValue = 100
	Size = [2, 2]
	MaxHealth = 16000
	EditorIcon
	{
		Texture
		{
			File = "mapd_roof.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, AmmoStorage]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}
		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
		}

		FireAlternatingToggle
		{
			Type = UIToggle
			ToggleID = "fire_alternating"
			Default = 0
		}
		AmmoStorage
		{
			Type = AmmoConsumer
			AmmoType = mini_railgun_slugs
			MaxAmmo = 80
			StartingAmmo = 0
			SuppliesAmmo = false
			Priorities = &/PRIORITIES/Weapon_Supply

			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/AmmoDeliver
		}
		BatteryStorage
		{
			Type = AmmoConsumer
			AmmoType = battery
			MaxAmmo = 2000
			StartingAmmo = 0
			SuppliesAmmo = false
			Priorities = &/PRIORITIES/Weapon_Supply
			RecieveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		Graphics
		{
			Type = Graphics
			Location = [1, 1]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 2]
					}
					{
						File = "floor_33.png"
						Size = [2, 2]
					}
					{
						File = "floor_66.png"
						Size = [2, 2]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "../slug_storages/lights.png"
						Size = [2, 2]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "../slug_storages/walls.png"
						Size = [2, 2]
					}
					/*{
						File = "walls_33.png"
						Size = [2, 2]
					}
					{
						File = "walls_66.png"
						Size = [2, 2]
					}*/
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [2, 2]
					}
					{
						File = "roof_33.png"
						Size = [2, 2]
					}
					{
						File = "roof_66.png"
						Size = [2, 2]
					}
				]
			}
            OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "doodads_low.png"
						Size = [2, 2]
					}
				]
			}
			NonOperationalDoodad = &OperationalDoodad
		}
		Turret
		{
			Type = TurretWeapon
			OperationalToggle = IsOperational
			Location = [1, 1]// Relative to upper-left corner of unrotated part.
			Rotation = -90d// Relative to unrotated part.
			FireInterval = 0.1
			FiringArc = 360d
			RotateSpeed = 120d
			FireThresholdAngle = 1d
			TargetSearchTriesPerFrame = 4
			AIFirepowerRating = 1000
			FireModeToggle = FireModeToggle
			AllowFireWithBlockedLOS = true
			TargetTypesByPriority = [Bullets, Ships]
			Emitter = BulletEmitterBase
			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = FireModeToggle
				}
				{
					TargetType = Bullets
					Toggle = FireModeToggle
				}
			]
			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}
		ShootSynchronizedComponents
		{
			Type = ToggledComponents
			Toggle = FireAlternatingToggle
			Invert = true
			Components
			{
				FireTimer
				{
					Type = Timer
					OperationalToggle = IsOperational
					Duration = 1.125
					AutoStart = true
					StartTrigger = Turret
				}

				ReloadProgressBar
				{
					Type = ProgressBar
					OperationalToggle = IsOperational
					ShowProgressFor = FireTimer
					Invert = true
				}

				ShootLeftTrigger
				{
					Type = TriggerProxy
					ComponentID = Turret
				}

				ShootRightTrigger
				{
					Type = TriggerProxy
					ComponentID = Turret
				}
			}
		}

		ShootAlternatingComponents
		{
			Type = ToggledComponents
			Toggle = FireAlternatingToggle
			Components
			{
				FireTimer
				{
					Type = Timer
					OperationalToggle = IsOperational
					Duration = 0.5625
					AutoStart = true
					StartTrigger = Turret
				}

				ReloadProgressBar
				{
					Type = ProgressBar
					OperationalToggle = IsOperational
					ShowProgressFor = FireTimer
					Invert = true
				}

				ShootCycle
				{
					Type = ModeCycle
					ModeRange = [0, 1]
					IncrementTrigger = Turret
					StartingMode = 1 // First shot will switch to mode 0.
				}

				ShootLeftTrigger
				{
					Type = ModeTrigger
					Mode = ShootCycle
					TriggerInModes = [0]
				}

				ShootRightTrigger
				{
					Type = ModeTrigger
					Mode = ShootCycle
					TriggerInModes = [1]
					OperationalToggle = FireAlternatingToggle
				}
			}
		}

		FireTimerProxy
		{
			Type = ToggleProxy
			ComponentID = FireTimer
		}

		ShootLeftTriggerProxy
		{
			Type = TriggerProxy
			ComponentID = ShootLeftTrigger
		}

		ShootRightTriggerProxy
		{
			Type = TriggerProxy
			ComponentID = ShootRightTrigger
		}

		BulletEmitterBase // Doesn't actually fire; only used for targeting and as a base for the left and right emitters.
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger // none, but field is required
			GetTargetFrom = Turret
			Location = [0.5, 0]
			OperationalToggle = IsOperational
			FireDelay = .2
			Bullet = &<mapd_shot.txt>
			AmmoUsage
			[
				{
					AmmoStorage = AmmoStorage
					AmmoUsed = 1
				}
				{
					AmmoStorage = BatteryStorage
					AmmoUsed = 125
				}
			]
		}

		BulletEmitterLeft : BulletEmitterBase
		{
			Type = BulletEmitter
			FireTrigger = ShootLeftTrigger
			Location = [0.5, -0.359375]
		}

		BulletEmitterRight : BulletEmitterBase
		{
			Type = BulletEmitter
			FireTrigger = ShootRightTrigger
			Location = [0.5, 0.359375]
		}
		TurretGraphics
		{
			Type = Graphics
			OperationalToggle = IsOperational
			ChainedTo = Turret
			Location = [0, 0]
			Rotation = 90d
			OperationalDoodad
			{
				Layer = "roof_weapons"
				DamageLevels
				[
					{
						File = "turret.png"
						Size = [2, 2]
					}
				]
			}
			NonOperationalDoodad = &OperationalDoodad
		}
		LeftBarrelSprite
		{
			Type = Sprite
			ChainedTo = Turret
			Location = [0, 0]
			Rotation = 90d
			Layer = "roof_windows"
			ResetAnimationTrigger = ShootLeftTrigger
			AtlasSprite
			{
				AnimationFiles
				[
					"lbarrel1.png"
					"lbarrel2.png"
					"lbarrel3.png"
					"lbarrel.png"
				]
				Size = [2, 2]
				AnimationInterval = 0.05
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}
		RightBarrelSprite : LeftBarrelSprite
		{
			ResetAnimationTrigger = ShootRightTrigger
			AtlasSprite : ^/0/AtlasSprite
			{
				MirrorU = true
			}
		}
		AmmoSprites
		{
			Type = AmmoSprites
			Location = [1, 1]
			AmmoStorage = AmmoStorage
			Layer = "doodads_high"
			AmmoLevels
			[
				{
					File = "minislugs_1.png"
					Size = [2, 2]
				}
				{
					File = "minislugs_2.png"
					Size = [2, 2]
				}
				{
					File = "minislugs_3.png"
					Size = [2, 2]
				}
				{
					File = "minislugs_4.png"
					Size = [2, 2]
				}
				{
					File = "minislugs_5.png"
					Size = [2, 2]
				}
			]
		}
		BatterySprites
		{
			Type = AmmoSprites
			Location = [1, 1]
			AmmoStorage = BatteryStorage
			Layer = "turrets"
			HasZeroAmmoSprite = true
			AmmoLevels
			[
				{
					File = "battery0.png"
					Size = [2, 2]
				}
				{
					File = "battery1.png"
					Size = [2, 2]
				}
				{
					File = "battery2.png"
					Size = [2, 2]
				}
			]
		}
		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 1]

			FactorHitEffectsWith = AmmoStorage
			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 500
					Radius = 2.5
                    FireChancePerNDamage = 25%
                    ImpulsePerNDamage = 0.1
					Filter
					{
                        OperationalHealth = true
						StructuralHealth = false
						Friendlies = false
					}
				}
                {
					Type = ExplosiveDamage
					TotalDamage = 400
					Radius = 2
                    ImpulsePerNDamage = 0.2
					Filter
					{
                        OperationalHealth = false
						StructuralHealth = true
						Friendlies = false
					}
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 1]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of ammo.
				{
					Toggle = AmmoStorage
					AtlasSprite
					{
						File = "../ammo_classes/no_minislugs.png"
						Size = [1.5, 1.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]
		}
	}
}
